{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://ngx-ui-loader/lib/utils/enums.ts","ng://ngx-ui-loader/lib/utils/constants.ts","ng://ngx-ui-loader/lib/core/ngx-ui-loader-config.token.ts","ng://ngx-ui-loader/lib/core/ngx-ui-loader.service.ts","ng://ngx-ui-loader/lib/utils/functions.ts","ng://ngx-ui-loader/lib/core/ngx-ui-loader.component.ts","ng://ngx-ui-loader/lib/core/ngx-ui-loader-blurred.directive.ts","ng://ngx-ui-loader/lib/core/ngx-ui-loader.module.ts","ng://ngx-ui-loader/lib/router/ngx-ui-loader-router-config.token.ts","ng://ngx-ui-loader/lib/router/ngx-ui-loader-router.module.ts","ng://ngx-ui-loader/lib/http/ngx-ui-loader-http-config.token.ts","ng://ngx-ui-loader/lib/http/ngx-ui-loader-http.interceptor.ts","ng://ngx-ui-loader/lib/http/ngx-ui-loader-http.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","ballScaleMultiple","ballSpin","ballSpinClockwise","ballSpinClockwiseFadeRotating","ballSpinFadeRotating","chasingDots","circle","cubeGrid","doubleBounce","fadingCircle","foldingCube","pulse","rectangleBounce","rectangleBounceParty","rectangleBouncePulseOut","rectangleBouncePulseOutRapid","rotatingPlane","squareJellyBox","squareLoader","threeBounce","threeStrings","wanderingCubes","bottomCenter","bottomLeft","bottomRight","centerCenter","centerLeft","centerRight","topCenter","topLeft","topRight","leftToRight","rightToLeft","DEFAULT_TIME","MIN_TIME","ROUTER_LOADER_TASK_ID","SPINNER_CONFIG","ball-scale-multiple","divs","class","ball-spin","ball-spin-clockwise","ball-spin-clockwise-fade-rotating","ball-spin-fade-rotating","chasing-dots","cube-grid","double-bounce","fading-circle","folding-cube","rectangle-bounce","rectangle-bounce-party","rectangle-bounce-pulse-out","rectangle-bounce-pulse-out-rapid","rotating-plane","square-jelly-box","square-loader","three-bounce","three-strings","wandering-cubes","DEFAULT_CONFIG","bgsColor","bgsOpacity","bgsPosition","POSITION","bgsSize","bgsType","SPINNER","blur","delay","fgsColor","fgsPosition","fgsSize","fgsType","gap","logoPosition","logoSize","logoUrl","masterLoaderId","overlayBorderRadius","overlayColor","pbColor","pbDirection","PB_DIRECTION","pbThickness","hasProgressBar","text","textColor","textPosition","maxTime","minTime","NGX_UI_LOADER_CONFIG_TOKEN","InjectionToken","NgxUiLoaderService","config","defaultConfig","loaders","showForeground","BehaviorSubject","loaderId","isShow","showForeground$","asObservable","showBackground","showBackground$","fgClosing","foregroundClosing$","bgClosing","backgroundClosing$","bindLoaderData","isMaster","throwErrorIfMasterLoaderExists","throwErrorIfLoaderExists","isBound","hasRunningTask","next","createLoaderData","updateLoaderId","newLoaderId","throwErrorIfLoaderNotExist","tasks","console","warn","destroyLoaderData","stopAllLoader","getDefaultConfig","getLoaders","JSON","parse","stringify","getLoader","throwErrorIfMasterLoaderNotExist","startLoader","taskId","time","readyToStart","isOtherRunning","backgroundCloseout","start","startBackgroundLoader","startBackground","stopLoader","_this","readyToStop","foregroundCloseout","setTimeout","stop","stopBackgroundLoader","stopBackground","clearAllTimers","stopAll","Error","useIsBoundProp","clearTimers","task","delayTimer","clearTimeout","maxTimer","minTimer","keys","map","id","isForeground","tasks_1","startAt","some","undefined","setDelayTimer","Date","now","setMaxTimer","isDelayed","setMinTimer","Injectable","args","providedIn","Optional","type","Inject","coerceNumber","value","fallbackValue","isNaN","parseFloat","Number","getExcludeObj","strs","regExps","exclude","url","toLowerCase","excludeRegexp","regexp","RegExp","isIgnored","excludeStrings","excludeRegexps","findIndex","str","startsWith","test","NgxUiLoaderComponent","domSanitizer","changeDetectorRef","ngxService","initialized","ngOnInit","initializeSpinners","determinePositions","validate","trustedLogoUrl","bypassSecurityTrustResourceUrl","showForegroundWatcher","pipe","filter","showEvent","subscribe","data","markForCheck","showBackgroundWatcher","foregroundClosingWatcher","foregroundClosing","backgroundClosingWatcher","backgroundClosing","ngOnChanges","changes","bgsTypeChange","bgsPositionChange","fgsTypeChange","loaderIdChange","logoUrlChange","pbDirectionChange","previousValue","fgDivs","Array","fill","fgSpinnerClass","bgDivs","bgSpinnerClass","logoTop","spinnerTop","textTop","bypassSecurityTrustStyle","inputName","validTypeObj","k","v","error","ngOnDestroy","unsubscribe","Component","selector","template","changeDetection","ChangeDetectionStrategy","OnPush","DomSanitizer","ChangeDetectorRef","Input","NgxUiLoaderBlurredDirective","elementRef","renderer","loader","blurNumber","defineProperty","filterValue","setStyle","nativeElement","Directive","ElementRef","Renderer2","NgxUiLoaderModule","forRoot","ngxUiLoaderConfig","ngModule","providers","provide","useValue","NgModule","imports","CommonModule","declarations","exports","NGX_UI_LOADER_ROUTER_CONFIG_TOKEN","NgxUiLoaderRouterModule","parentModule","customConfig","router","events","event","NavigationStart","NavigationEnd","NavigationCancel","NavigationError","routerConfig","decorators","SkipSelf","Router","NGX_UI_LOADER_HTTP_CONFIG_TOKEN","NgxUiLoaderHttpInterceptor","count","intercept","req","handle","finalize","NgxUiLoaderHttpModule","httpConfig","HTTP_INTERCEPTORS","useClass","multi"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * Available spinner types\n */\nexport enum SPINNER {\n  ballScaleMultiple = 'ball-scale-multiple',\n  ballSpin = 'ball-spin',\n  ballSpinClockwise = 'ball-spin-clockwise',\n  ballSpinClockwiseFadeRotating = 'ball-spin-clockwise-fade-rotating',\n  ballSpinFadeRotating = 'ball-spin-fade-rotating',\n  chasingDots = 'chasing-dots',\n  circle = 'circle',\n  cubeGrid = 'cube-grid',\n  doubleBounce = 'double-bounce',\n  fadingCircle = 'fading-circle',\n  foldingCube = 'folding-cube',\n  pulse = 'pulse',\n  rectangleBounce = 'rectangle-bounce',\n  rectangleBounceParty = 'rectangle-bounce-party',\n  rectangleBouncePulseOut = 'rectangle-bounce-pulse-out',\n  rectangleBouncePulseOutRapid = 'rectangle-bounce-pulse-out-rapid',\n  rotatingPlane = 'rotating-plane',\n  squareJellyBox = 'square-jelly-box',\n  squareLoader = 'square-loader',\n  threeBounce = 'three-bounce',\n  threeStrings = 'three-strings',\n  wanderingCubes = 'wandering-cubes'\n}\n\n/**\n * Available postions\n */\nexport enum POSITION {\n  bottomCenter = 'bottom-center',\n  bottomLeft = 'bottom-left',\n  bottomRight = 'bottom-right',\n  centerCenter = 'center-center',\n  centerLeft = 'center-left',\n  centerRight = 'center-right',\n  topCenter = 'top-center',\n  topLeft = 'top-left',\n  topRight = 'top-right'\n}\n\n/**\n * Progress bar directions\n */\nexport enum PB_DIRECTION {\n  leftToRight = 'ltr',\n  rightToLeft = 'rtl'\n}\n","import { NgxUiLoaderConfig, Time } from '../utils/interfaces';\nimport { POSITION, PB_DIRECTION, SPINNER } from './enums';\n\n/**\n * The default value of foreground task id\n */\nexport const DEFAULT_FG_TASK_ID = 'fg-default';\n\n/**\n * The default value of background task id\n */\nexport const DEFAULT_BG_TASK_ID = 'bg-default';\n\n/**\n * The default value of loader id\n */\nexport const DEFAULT_MASTER_LOADER_ID = 'master';\n\nexport const DEFAULT_TIME: Time = {};\n\nexport const MIN_DELAY = 0;\n\nexport const MIN_TIME = 300;\n\nexport const CLOSING_TIME = 1001;\n\nexport const BACKGROUND = false;\n\nexport const FOREGROUND = true;\n\nexport const WAITING_FOR_OVERLAY_DISAPPEAR = 500;\n\n/**\n * Http loader taskId\n */\nexport const HTTP_LOADER_TASK_ID = '$_http-loader';\n\n/**\n * Router loader taskId\n */\nexport const ROUTER_LOADER_TASK_ID = '$_router_loader';\n\n/**\n * The configuration of spinners\n */\nexport const SPINNER_CONFIG = {\n  'ball-scale-multiple': {\n    divs: 3,\n    class: 'sk-ball-scale-multiple'\n  },\n  'ball-spin': {\n    divs: 8,\n    class: 'sk-ball-spin'\n  },\n  'ball-spin-clockwise': {\n    divs: 8,\n    class: 'sk-ball-spin-clockwise'\n  },\n  'ball-spin-clockwise-fade-rotating': {\n    divs: 8,\n    class: 'sk-ball-spin-clockwise-fade-rotating'\n  },\n  'ball-spin-fade-rotating': {\n    divs: 8,\n    class: 'sk-ball-spin-fade-rotating'\n  },\n  'chasing-dots': {\n    divs: 2,\n    class: 'sk-chasing-dots'\n  },\n  circle: {\n    divs: 12,\n    class: 'sk-circle'\n  },\n  'cube-grid': {\n    divs: 9,\n    class: 'sk-cube-grid'\n  },\n  'double-bounce': {\n    divs: 2,\n    class: 'sk-double-bounce'\n  },\n  'fading-circle': {\n    divs: 12,\n    class: 'sk-fading-circle'\n  },\n  'folding-cube': {\n    divs: 4,\n    class: 'sk-folding-cube'\n  },\n  pulse: {\n    divs: 1,\n    class: 'sk-pulse'\n  },\n  'rectangle-bounce': {\n    divs: 5,\n    class: 'sk-rectangle-bounce'\n  },\n  'rectangle-bounce-party': {\n    divs: 5,\n    class: 'sk-rectangle-bounce-party'\n  },\n  'rectangle-bounce-pulse-out': {\n    divs: 5,\n    class: 'sk-rectangle-bounce-pulse-out'\n  },\n  'rectangle-bounce-pulse-out-rapid': {\n    divs: 5,\n    class: 'sk-rectangle-bounce-pulse-out-rapid'\n  },\n  'rotating-plane': {\n    divs: 1,\n    class: 'sk-rotating-plane'\n  },\n  'square-jelly-box': {\n    divs: 2,\n    class: 'sk-square-jelly-box'\n  },\n  'square-loader': {\n    divs: 1,\n    class: 'sk-square-loader'\n  },\n  'three-bounce': {\n    divs: 3,\n    class: 'sk-three-bounce'\n  },\n  'three-strings': {\n    divs: 3,\n    class: 'sk-three-strings'\n  },\n  'wandering-cubes': {\n    divs: 2,\n    class: 'sk-wandering-cubes'\n  }\n};\n\n/**\n * The default configuration of ngx-ui-loader\n */\nexport const DEFAULT_CONFIG: NgxUiLoaderConfig = {\n  bgsColor: '#00ACC1',\n  bgsOpacity: 0.5,\n  bgsPosition: POSITION.bottomRight,\n  bgsSize: 60,\n  bgsType: SPINNER.ballSpinClockwise,\n  blur: 5,\n  delay: 0,\n  fgsColor: '#00ACC1',\n  fgsPosition: POSITION.centerCenter,\n  fgsSize: 60,\n  fgsType: SPINNER.ballSpinClockwise,\n  gap: 24,\n  logoPosition: POSITION.centerCenter,\n  logoSize: 120,\n  logoUrl: '',\n  masterLoaderId: DEFAULT_MASTER_LOADER_ID,\n  overlayBorderRadius: '0',\n  overlayColor: 'rgba(40, 40, 40, 0.8)',\n  pbColor: '#00ACC1',\n  pbDirection: PB_DIRECTION.leftToRight,\n  pbThickness: 3,\n  hasProgressBar: true,\n  text: '',\n  textColor: '#FFFFFF',\n  textPosition: POSITION.centerCenter,\n  maxTime: -1,\n  minTime: 500\n};\n","import { InjectionToken } from '@angular/core';\nimport { NgxUiLoaderConfig } from '../utils/interfaces';\n\n/**\n * Injection token for ngx-ui-loader configuration\n */\nexport const NGX_UI_LOADER_CONFIG_TOKEN = new InjectionToken<NgxUiLoaderConfig>('ngxUiLoaderCustom.config');\n","import { Inject, Injectable, Optional } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nimport {\n  BACKGROUND,\n  CLOSING_TIME,\n  DEFAULT_BG_TASK_ID,\n  DEFAULT_CONFIG,\n  DEFAULT_FG_TASK_ID,\n  DEFAULT_TIME,\n  FOREGROUND,\n  MIN_DELAY,\n  MIN_TIME,\n  WAITING_FOR_OVERLAY_DISAPPEAR\n} from '../utils/constants';\nimport { NGX_UI_LOADER_CONFIG_TOKEN } from './ngx-ui-loader-config.token';\nimport { NgxUiLoaderConfig } from '../utils/interfaces';\nimport { Loaders, Loader, ShowEvent, Tasks, Task, Time } from '../utils/interfaces';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxUiLoaderService {\n  /**\n   * For internal use only.\n   * @docs-private\n   */\n  backgroundClosing$: Observable<ShowEvent>;\n\n  /**\n   * For internal use only.\n   * @docs-private\n   */\n  foregroundClosing$: Observable<ShowEvent>;\n\n  /**\n   * For internal use only.\n   * @docs-private\n   */\n  showBackground$: Observable<ShowEvent>;\n\n  /**\n   * For internal use only.\n   * @docs-private\n   */\n  showForeground$: Observable<ShowEvent>;\n\n  private bgClosing: BehaviorSubject<ShowEvent>;\n  private defaultConfig: NgxUiLoaderConfig;\n  private fgClosing: BehaviorSubject<ShowEvent>;\n  private loaders: Loaders;\n  private showBackground: BehaviorSubject<ShowEvent>;\n  private showForeground: BehaviorSubject<ShowEvent>;\n\n  /**\n   * Constructor\n   */\n  constructor(@Optional() @Inject(NGX_UI_LOADER_CONFIG_TOKEN) private config: NgxUiLoaderConfig) {\n    this.defaultConfig = { ...DEFAULT_CONFIG };\n    if (this.config) {\n      if (this.config.minTime && this.config.minTime < MIN_TIME) {\n        this.config.minTime = MIN_TIME;\n      }\n      this.defaultConfig = { ...this.defaultConfig, ...this.config };\n    }\n    this.loaders = {};\n    this.showForeground = new BehaviorSubject<ShowEvent>({ loaderId: '', isShow: false });\n    this.showForeground$ = this.showForeground.asObservable();\n    this.showBackground = new BehaviorSubject<ShowEvent>({ loaderId: '', isShow: false });\n    this.showBackground$ = this.showBackground.asObservable();\n    this.fgClosing = new BehaviorSubject<ShowEvent>({ loaderId: '', isShow: false });\n    this.foregroundClosing$ = this.fgClosing.asObservable();\n    this.bgClosing = new BehaviorSubject<ShowEvent>({ loaderId: '', isShow: false });\n    this.backgroundClosing$ = this.bgClosing.asObservable();\n  }\n\n  /**\n   * For internal use only.\n   * @docs-private\n   */\n  bindLoaderData(loaderId: string): void {\n    let isMaster = false;\n    if (loaderId === this.defaultConfig.masterLoaderId) {\n      this.throwErrorIfMasterLoaderExists(true);\n      isMaster = true;\n    } else {\n      // not master loader\n      this.throwErrorIfLoaderExists(loaderId, true);\n    }\n    if (this.loaders[loaderId]) {\n      this.loaders[loaderId].isBound = true;\n      this.loaders[loaderId].isMaster = isMaster;\n      // emit showEvent after data loader is bound\n      if (this.hasRunningTask(FOREGROUND, loaderId)) {\n        this.showForeground.next({ loaderId, isShow: true });\n      } else {\n        if (this.hasRunningTask(BACKGROUND, loaderId)) {\n          this.showBackground.next({ loaderId, isShow: true });\n        }\n      }\n    } else {\n      this.createLoaderData(loaderId, isMaster, true);\n    }\n  }\n\n  /**\n   * For internal use only.\n   * @docs-private\n   */\n  updateLoaderId(loaderId: string, newLoaderId: string): void {\n    this.throwErrorIfLoaderNotExist(loaderId);\n    if (this.loaders[loaderId].loaderId === this.defaultConfig.masterLoaderId) {\n      console.warn(\n        `[ngx-ui-loader] - Cannot change loaderId of master loader. The current ` +\n          `master's loaderId is \"${this.defaultConfig.masterLoaderId}\". If you really want to ` +\n          `change it, please use NgxUiLoaderModule.forRoot() method.`\n      );\n      return;\n    }\n    if (newLoaderId !== loaderId) {\n      this.throwErrorIfLoaderExists(newLoaderId, true);\n      this.loaders[newLoaderId] = {\n        loaderId: newLoaderId,\n        tasks: { ...this.loaders[loaderId].tasks },\n        isMaster: false,\n        isBound: this.loaders[loaderId].isBound\n      };\n      delete this.loaders[loaderId];\n    }\n  }\n\n  /**\n   * For internal use only.\n   * @docs-private\n   */\n  destroyLoaderData(loaderId: string): void {\n    this.stopAllLoader(loaderId);\n    delete this.loaders[loaderId];\n  }\n\n  /**\n   * Get default loader configuration\n   * @returns default configuration object\n   */\n  getDefaultConfig(): NgxUiLoaderConfig {\n    return { ...this.defaultConfig };\n  }\n\n  /**\n   * Get all the loaders\n   */\n  getLoaders(): Loaders {\n    return JSON.parse(JSON.stringify(this.loaders));\n  }\n\n  /**\n   * Get data of a specified loader. If loaderId is not provided, it will return data of master loader(if existed)\n   */\n  getLoader(loaderId?: string): Loader {\n    if (loaderId) {\n      this.throwErrorIfLoaderNotExist(loaderId);\n    } else {\n      this.throwErrorIfMasterLoaderNotExist();\n      loaderId = this.defaultConfig.masterLoaderId;\n    }\n    return JSON.parse(JSON.stringify(this.loaders[loaderId]));\n  }\n\n  /**\n   * Start the foreground loading of loader having `loaderId` with a specified `taskId`.\n   * The loading is only closed off when all taskIds of that loader are called with stopLoader() method.\n   * @param loaderId the loader Id\n   * @param taskId the optional task Id of the loading. taskId is set to 'fd-default' by default.\n   */\n  startLoader(loaderId: string, taskId: string = DEFAULT_FG_TASK_ID, time?: Time): void {\n    if (!this.readyToStart(loaderId, taskId, true, time)) {\n      return;\n    }\n    if (!this.loaders[loaderId].tasks[taskId].isOtherRunning) {\n      // no other foreground task running\n      if (this.hasRunningTask(BACKGROUND, loaderId)) {\n        this.backgroundCloseout(loaderId);\n        this.showBackground.next({ loaderId, isShow: false });\n      }\n      this.showForeground.next({ loaderId, isShow: true });\n    }\n  }\n\n  /**\n   * Start the foreground loading of master loader with a specified `taskId`.\n   * The loading is only closed off when all taskIds of that loader are called with stop() method.\n   * NOTE: Really this function just wraps startLoader() function\n   * @param taskId the optional task Id of the loading. taskId is set to 'fd-default' by default.\n   */\n  start(taskId: string = DEFAULT_FG_TASK_ID, time?: Time): void {\n    this.startLoader(this.defaultConfig.masterLoaderId, taskId, time);\n  }\n\n  /**\n   * Start the background loading of loader having `loaderId` with a specified `taskId`.\n   * The loading is only closed off when all taskIds of that loader are called with stopLoaderBackground() method.\n   * @param loaderId the loader Id\n   * @param taskId the optional task Id of the loading. taskId is set to 'bg-default' by default.\n   */\n  startBackgroundLoader(loaderId: string, taskId: string = DEFAULT_BG_TASK_ID, time?: Time): void {\n    if (!this.readyToStart(loaderId, taskId, false, time)) {\n      return;\n    }\n    if (!this.hasRunningTask(FOREGROUND, loaderId) && !this.loaders[loaderId].tasks[taskId].isOtherRunning) {\n      this.showBackground.next({ loaderId, isShow: true });\n    }\n  }\n\n  /**\n   * Start the background loading of master loader with a specified `taskId`.\n   * The loading is only closed off when all taskIds of that loader are called with stopBackground() method.\n   * NOTE: Really this function just wraps startBackgroundLoader() function\n   * @param taskId the optional task Id of the loading. taskId is set to 'bg-default' by default.\n   */\n  startBackground(taskId: string = DEFAULT_BG_TASK_ID, time?: Time): void {\n    this.startBackgroundLoader(this.defaultConfig.masterLoaderId, taskId, time);\n  }\n\n  /**\n   * Stop a foreground loading of loader having `loaderId` with specific `taskId`\n   * @param loaderId the loader Id\n   * @param taskId the optional task Id to stop. If not provided, 'fg-default' is used.\n   * @returns Object\n   */\n  stopLoader(loaderId: string, taskId: string = DEFAULT_FG_TASK_ID): void {\n    if (!this.readyToStop(loaderId, taskId)) {\n      return;\n    }\n    if (!this.hasRunningTask(FOREGROUND, loaderId)) {\n      this.foregroundCloseout(loaderId);\n      this.showForeground.next({ loaderId, isShow: false });\n      if (this.hasRunningTask(BACKGROUND, loaderId)) {\n        setTimeout(() => {\n          if (this.hasRunningTask(BACKGROUND, loaderId)) {\n            // still have background tasks\n            this.showBackground.next({ loaderId, isShow: true });\n          }\n        }, WAITING_FOR_OVERLAY_DISAPPEAR);\n      }\n    }\n  }\n\n  /**\n   * Stop a foreground loading of master loader with specific `taskId`\n   * @param taskId the optional task Id to stop. If not provided, 'fg-default' is used.\n   * @returns Object\n   */\n  stop(taskId: string = DEFAULT_FG_TASK_ID): void {\n    this.stopLoader(this.defaultConfig.masterLoaderId, taskId);\n  }\n\n  /**\n   * Stop a background loading of loader having `loaderId` with specific `taskId`\n   * @param loaderId the loader Id\n   * @param taskId the optional task Id to stop. If not provided, 'bg-default' is used.\n   * @returns Object\n   */\n  stopBackgroundLoader(loaderId: string, taskId: string = DEFAULT_BG_TASK_ID): void {\n    if (!this.readyToStop(loaderId, taskId)) {\n      return;\n    }\n    if (!this.hasRunningTask(FOREGROUND, loaderId) && !this.hasRunningTask(BACKGROUND, loaderId)) {\n      this.backgroundCloseout(loaderId);\n      this.showBackground.next({ loaderId, isShow: false });\n    }\n  }\n\n  /**\n   * Stop a background loading of master loader with specific taskId\n   * @param taskId the optional task Id to stop. If not provided, 'bg-default' is used.\n   * @returns Object\n   */\n  stopBackground(taskId: string = DEFAULT_BG_TASK_ID): void {\n    this.stopBackgroundLoader(this.defaultConfig.masterLoaderId, taskId);\n  }\n\n  /**\n   * Stop all the background and foreground loadings of loader having `loaderId`\n   * @param loaderId the loader Id\n   */\n  stopAllLoader(loaderId: string): void {\n    this.throwErrorIfLoaderNotExist(loaderId);\n    if (this.hasRunningTask(FOREGROUND, loaderId)) {\n      this.foregroundCloseout(loaderId);\n      this.showForeground.next({ loaderId, isShow: false });\n    } else if (this.hasRunningTask(BACKGROUND, loaderId)) {\n      this.backgroundCloseout(loaderId);\n      this.showBackground.next({ loaderId, isShow: false });\n    }\n    this.clearAllTimers(this.loaders[loaderId].tasks);\n    this.loaders[loaderId].tasks = {};\n  }\n\n  /**\n   * Stop all the background and foreground loadings of master loader\n   */\n  stopAll(): void {\n    this.stopAllLoader(this.defaultConfig.masterLoaderId);\n  }\n\n  /**\n   * Create loader data if it does not exist\n   * @docs-private\n   */\n  private createLoaderData(loaderId: string, isMaster: boolean, isBound: boolean): void {\n    if (!this.loaders[loaderId]) {\n      this.loaders[loaderId] = {\n        loaderId,\n        tasks: {},\n        isMaster,\n        isBound\n      };\n    }\n  }\n\n  /**\n   * Throw error if the loaderId does not exist.\n   * @docs-private\n   */\n  private throwErrorIfLoaderNotExist(loaderId: string): void {\n    if (!this.loaders[loaderId]) {\n      throw new Error(`[ngx-ui-loader] - loaderId \"${loaderId}\" does not exist.`);\n    }\n  }\n\n  /**\n   * Throw error if the loaderId has already existed.\n   * @docs-private\n   */\n  private throwErrorIfLoaderExists(loaderId: string, useIsBoundProp?: boolean): void {\n    if (this.loaders[loaderId] && (this.loaders[loaderId].isBound && useIsBoundProp)) {\n      throw new Error(`[ngx-ui-loader] - loaderId \"${loaderId}\" is duplicated.`);\n    }\n  }\n\n  /**\n   * Throw error if the master loader has already existed.\n   * @docs-private\n   */\n  private throwErrorIfMasterLoaderExists(useIsBoundProp?: boolean): void {\n    if (this.loaders[this.defaultConfig.masterLoaderId] && (this.loaders[this.defaultConfig.masterLoaderId].isBound && useIsBoundProp)) {\n      throw new Error(\n        `[ngx-ui-loader] - The master loader has already existed. ` +\n          `The app should have only one master loader and it should be placed in the root app template`\n      );\n    }\n  }\n\n  /**\n   * Throw error if the master loader does not exist.\n   * @docs-private\n   */\n  private throwErrorIfMasterLoaderNotExist(): void {\n    if (!this.loaders[this.defaultConfig.masterLoaderId]) {\n      throw new Error(`[ngx-ui-loader] - The master loader does not exist.`);\n    }\n  }\n\n  /**\n   * Manage to close foreground loading\n   * @docs-private\n   * @param loaderId the loader id\n   */\n  private foregroundCloseout(loaderId: string): void {\n    this.fgClosing.next({ loaderId, isShow: true });\n    setTimeout(() => {\n      this.fgClosing.next({ loaderId, isShow: false });\n    }, CLOSING_TIME);\n  }\n\n  /**\n   * Manage to close background loading\n   * @docs-private\n   * @param loaderId the loader id\n   */\n  private backgroundCloseout(loaderId: string): void {\n    this.bgClosing.next({ loaderId, isShow: true });\n    setTimeout(() => {\n      this.bgClosing.next({ loaderId, isShow: false });\n    }, CLOSING_TIME);\n  }\n\n  /**\n   * Clear all timers of the given task\n   * @docs-private\n   */\n  private clearTimers(task: Task): void {\n    if (task.delayTimer) {\n      clearTimeout(task.delayTimer);\n    }\n    if (task.maxTimer) {\n      clearTimeout(task.maxTimer);\n    }\n    if (task.minTimer) {\n      clearTimeout(task.minTimer);\n    }\n  }\n\n  /**\n   * Clear all timers of the given tasks\n   * @docs-private\n   */\n  private clearAllTimers(tasks: Tasks): void {\n    Object.keys(tasks).map(id => {\n      this.clearTimers(tasks[id]);\n    });\n  }\n\n  /**\n   * Check whether the specified loader has a running task with the given `taskId`.\n   * If no `taskId` specified, it will check whether the loader has any running tasks.\n   * For internal use only.\n   * @docs-private\n   * @param isForeground foreground task or background task\n   * @param loaderId the loader Id\n   * @param taskId the optional task Id\n   * @returns boolean\n   */\n  hasRunningTask(isForeground: boolean, loaderId: string, taskId?: string): boolean {\n    if (this.loaders[loaderId]) {\n      const tasks: Tasks = this.loaders[loaderId].tasks;\n      if (taskId) {\n        return tasks[taskId] ? (tasks[taskId].startAt ? true : false) : false;\n      }\n      return Object.keys(tasks).some(id => !!tasks[id].startAt && tasks[id].isForeground === isForeground);\n    }\n    return false;\n  }\n\n  /**\n   * @docs-private\n   */\n  private readyToStart(loaderId: string, taskId: string, isForeground: boolean, time: Time = DEFAULT_TIME): boolean {\n    this.createLoaderData(loaderId, undefined, false);\n    const isOtherRunning = this.hasRunningTask(isForeground, loaderId);\n    if (!this.loaders[loaderId].tasks[taskId]) {\n      this.loaders[loaderId].tasks[taskId] = {\n        taskId,\n        isForeground,\n        minTime: time.minTime >= MIN_TIME ? time.minTime : this.defaultConfig.minTime,\n        maxTime: time.maxTime ? time.maxTime : this.defaultConfig.maxTime,\n        delay: time.delay >= MIN_DELAY ? time.delay : this.defaultConfig.delay\n      };\n    } else {\n      if (this.loaders[loaderId].tasks[taskId].isForeground !== isForeground) {\n        throw new Error(`[ngx-ui-loader] - taskId \"${taskId}\" is duplicated.`);\n      }\n    }\n    if (this.setDelayTimer(this.loaders[loaderId].tasks[taskId], loaderId)) {\n      return false;\n    }\n    this.loaders[loaderId].tasks[taskId] = {\n      ...this.loaders[loaderId].tasks[taskId],\n      isOtherRunning,\n      startAt: Date.now()\n    };\n    this.setMaxTimer(this.loaders[loaderId].tasks[taskId], loaderId);\n    if (!this.loaders[loaderId].isBound) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * @docs-private\n   */\n  private readyToStop(loaderId: string, taskId: string): boolean {\n    this.throwErrorIfLoaderNotExist(loaderId);\n    const task: Task = this.loaders[loaderId].tasks[taskId];\n    if (!task) {\n      return false;\n    }\n    if (task.isDelayed) {\n      this.clearTimers(task);\n      delete this.loaders[loaderId].tasks[taskId];\n      return false;\n    }\n    if (this.setMinTimer(task, loaderId)) {\n      return false;\n    }\n    this.clearTimers(task);\n    delete this.loaders[loaderId].tasks[taskId];\n    return true;\n  }\n\n  /**\n   * Set delay timer, if `delay` > 0\n   * @docs-private\n   * @returns boolean\n   */\n  private setDelayTimer(task: Task, loaderId: string): boolean {\n    if (task.delay > MIN_DELAY) {\n      if (task.isDelayed) {\n        return true;\n      }\n      if (!task.delayTimer) {\n        task.isDelayed = true;\n        task.delayTimer = setTimeout(() => {\n          task.isDelayed = false;\n          if (task.isForeground) {\n            this.startLoader(loaderId, task.taskId);\n          } else {\n            this.startBackgroundLoader(loaderId, task.taskId);\n          }\n        }, task.delay);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set maxTimer if `maxTime` > `minTime`\n   * @docs-private\n   * @returns boolean\n   */\n  private setMaxTimer(task: Task, loaderId: string): void {\n    if (task.maxTime > task.minTime) {\n      // restart the task, reset maxTimer\n      if (task.maxTimer) {\n        clearTimeout(task.maxTimer);\n      }\n      task.maxTimer = setTimeout(() => {\n        if (task.isForeground) {\n          this.stopLoader(loaderId, task.taskId);\n        } else {\n          this.stopBackgroundLoader(loaderId, task.taskId);\n        }\n      }, task.maxTime);\n    }\n  }\n\n  /**\n   * Set minTimer if `startAt` + `minTime` > `Date.now()`\n   * @docs-private\n   * @returns boolean\n   */\n  private setMinTimer(task: Task, loaderId: string): boolean {\n    const now = Date.now();\n    if (task.startAt) {\n      if (task.startAt + task.minTime > now) {\n        task.minTimer = setTimeout(() => {\n          if (task.isForeground) {\n            this.stopLoader(loaderId, task.taskId);\n          } else {\n            this.stopBackgroundLoader(loaderId, task.taskId);\n          }\n        }, task.startAt + task.minTime - now);\n        return true;\n      }\n    }\n    return false;\n  }\n}\n","import { Config, Exclude } from './interfaces';\n\n/**\n * Coerce a value (string) to a number\n */\nexport function coerceNumber(value, fallbackValue): number {\n  return !isNaN(parseFloat(value as any)) && !isNaN(Number(value)) ? Number(value) : fallbackValue;\n}\n\nexport function getExcludeObj(config: Config): Exclude {\n  let strs: string[];\n  let regExps: RegExp[];\n\n  if (config) {\n    if (config.exclude) {\n      strs = config.exclude.map(url => url.toLowerCase());\n    }\n\n    if (config.excludeRegexp) {\n      regExps = config.excludeRegexp.map(regexp => new RegExp(regexp, 'i'));\n    }\n  }\n\n  return { strs, regExps };\n}\n\nexport function isIgnored(url: string, excludeStrings: string[], excludeRegexps: RegExp[]): boolean {\n  if (excludeStrings) {\n    // do not show the loader for urls in the `exclude` list\n    if (excludeStrings.findIndex(str => url.toLowerCase().startsWith(str)) !== -1) {\n      return true;\n    }\n  }\n\n  if (excludeRegexps) {\n    // do not show the loader for urls which matches regexps in the `excludeRegexp` list\n    if (excludeRegexps.findIndex(regexp => regexp.test(url)) !== -1) {\n      return true;\n    }\n  }\n\n  return false;\n}\n","import {\n  Component,\n  Input,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  SimpleChange,\n  OnDestroy,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { DomSanitizer, SafeResourceUrl, SafeStyle } from '@angular/platform-browser';\nimport { NgxUiLoaderService } from './ngx-ui-loader.service';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { NgxUiLoaderConfig } from '../utils/interfaces';\nimport { DirectionType, PositionType, SpinnerType } from '../utils/types';\nimport { POSITION, PB_DIRECTION, SPINNER } from '../utils/enums';\nimport { SPINNER_CONFIG } from '../utils/constants';\nimport { ShowEvent } from '../utils/interfaces';\nimport { coerceNumber } from '../utils/functions';\n\n@Component({\n  selector: 'ngx-ui-loader',\n  templateUrl: './ngx-ui-loader.component.html',\n  styleUrls: ['./ngx-ui-loader.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxUiLoaderComponent implements OnChanges, OnDestroy, OnInit {\n  @Input() bgsColor: string;\n  @Input() bgsOpacity: number;\n  @Input() bgsPosition: PositionType;\n  @Input() bgsSize: number;\n  @Input() bgsType: SpinnerType;\n  @Input() fgsColor: string;\n  @Input() fgsPosition: PositionType;\n  @Input() fgsSize: number;\n  @Input() fgsType: SpinnerType;\n  @Input() gap: number;\n  @Input() loaderId: string;\n  @Input() logoPosition: PositionType;\n  @Input() logoSize: number;\n  @Input() logoUrl: string;\n  @Input() overlayBorderRadius: string;\n  @Input() overlayColor: string;\n  @Input() pbColor: string;\n  @Input() pbDirection: DirectionType;\n  @Input() pbThickness: number;\n  @Input() hasProgressBar: boolean;\n  @Input() text: string;\n  @Input() textColor: string;\n  @Input() textPosition: PositionType;\n\n  fgDivs: number[];\n  fgSpinnerClass: string;\n  bgDivs: number[];\n  bgSpinnerClass: string;\n  showForeground: boolean;\n  showBackground: boolean;\n  foregroundClosing: boolean;\n  backgroundClosing: boolean;\n\n  trustedLogoUrl: SafeResourceUrl;\n  logoTop: SafeStyle;\n  spinnerTop: SafeStyle;\n  textTop: SafeStyle;\n\n  showForegroundWatcher: Subscription;\n  showBackgroundWatcher: Subscription;\n  foregroundClosingWatcher: Subscription;\n  backgroundClosingWatcher: Subscription;\n\n  defaultConfig: NgxUiLoaderConfig;\n  initialized: boolean;\n\n  /**\n   * Constructor\n   */\n  constructor(private domSanitizer: DomSanitizer, private changeDetectorRef: ChangeDetectorRef, private ngxService: NgxUiLoaderService) {\n    this.initialized = false;\n    this.defaultConfig = this.ngxService.getDefaultConfig();\n\n    this.bgsColor = this.defaultConfig.bgsColor;\n    this.bgsOpacity = this.defaultConfig.bgsOpacity;\n    this.bgsPosition = this.defaultConfig.bgsPosition;\n    this.bgsSize = this.defaultConfig.bgsSize;\n    this.bgsType = this.defaultConfig.bgsType;\n    this.fgsColor = this.defaultConfig.fgsColor;\n    this.fgsPosition = this.defaultConfig.fgsPosition;\n    this.fgsSize = this.defaultConfig.fgsSize;\n    this.fgsType = this.defaultConfig.fgsType;\n    this.gap = this.defaultConfig.gap;\n    this.loaderId = this.defaultConfig.masterLoaderId;\n    this.logoPosition = this.defaultConfig.logoPosition;\n    this.logoSize = this.defaultConfig.logoSize;\n    this.logoUrl = this.defaultConfig.logoUrl;\n    this.overlayBorderRadius = this.defaultConfig.overlayBorderRadius;\n    this.overlayColor = this.defaultConfig.overlayColor;\n    this.pbColor = this.defaultConfig.pbColor;\n    this.pbDirection = this.defaultConfig.pbDirection;\n    this.pbThickness = this.defaultConfig.pbThickness;\n    this.hasProgressBar = this.defaultConfig.hasProgressBar;\n    this.text = this.defaultConfig.text;\n    this.textColor = this.defaultConfig.textColor;\n    this.textPosition = this.defaultConfig.textPosition;\n  }\n\n  /**\n   * On init event\n   */\n  ngOnInit() {\n    this.initializeSpinners();\n    this.ngxService.bindLoaderData(this.loaderId);\n    this.determinePositions();\n\n    this.bgsPosition = this.validate('bgsPosition', this.bgsPosition, POSITION, this.defaultConfig.bgsPosition) as PositionType;\n\n    this.trustedLogoUrl = this.domSanitizer.bypassSecurityTrustResourceUrl(this.logoUrl);\n\n    this.pbDirection = this.validate('pbDirection', this.pbDirection, PB_DIRECTION, this.defaultConfig.pbDirection) as DirectionType;\n\n    this.showForegroundWatcher = this.ngxService.showForeground$\n      .pipe(filter((showEvent: ShowEvent) => this.loaderId === showEvent.loaderId))\n      .subscribe(data => {\n        this.showForeground = data.isShow;\n        this.changeDetectorRef.markForCheck();\n      });\n\n    this.showBackgroundWatcher = this.ngxService.showBackground$\n      .pipe(filter((showEvent: ShowEvent) => this.loaderId === showEvent.loaderId))\n      .subscribe(data => {\n        this.showBackground = data.isShow;\n        this.changeDetectorRef.markForCheck();\n      });\n\n    this.foregroundClosingWatcher = this.ngxService.foregroundClosing$\n      .pipe(filter((showEvent: ShowEvent) => this.loaderId === showEvent.loaderId))\n      .subscribe(data => {\n        this.foregroundClosing = data.isShow;\n        this.changeDetectorRef.markForCheck();\n      });\n\n    this.backgroundClosingWatcher = this.ngxService.backgroundClosing$\n      .pipe(filter((showEvent: ShowEvent) => this.loaderId === showEvent.loaderId))\n      .subscribe(data => {\n        this.backgroundClosing = data.isShow;\n        this.changeDetectorRef.markForCheck();\n      });\n    this.initialized = true;\n  }\n\n  /**\n   * On changes event\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.initialized) {\n      return;\n    }\n\n    const bgsTypeChange: SimpleChange = changes.bgsType;\n    const bgsPositionChange: SimpleChange = changes.bgsPosition;\n    const fgsTypeChange: SimpleChange = changes.fgsType;\n    const loaderIdChange: SimpleChange = changes.loaderId;\n    const logoUrlChange: SimpleChange = changes.logoUrl;\n    const pbDirectionChange: SimpleChange = changes.pbDirection;\n\n    if (fgsTypeChange || bgsTypeChange) {\n      this.initializeSpinners();\n    }\n\n    if (loaderIdChange) {\n      this.ngxService.updateLoaderId(loaderIdChange.previousValue, this.loaderId);\n    }\n\n    this.determinePositions();\n\n    if (bgsPositionChange) {\n      this.bgsPosition = this.validate('bgsPosition', this.bgsPosition, POSITION, this.defaultConfig.bgsPosition) as PositionType;\n    }\n\n    if (logoUrlChange) {\n      this.trustedLogoUrl = this.domSanitizer.bypassSecurityTrustResourceUrl(this.logoUrl);\n    }\n\n    if (pbDirectionChange) {\n      this.pbDirection = this.validate('pbDirection', this.pbDirection, PB_DIRECTION, this.defaultConfig.pbDirection) as DirectionType;\n    }\n  }\n\n  /**\n   * Initialize spinners\n   */\n  private initializeSpinners(): void {\n    this.fgsType = this.validate('fgsType', this.fgsType, SPINNER, this.defaultConfig.fgsType) as SpinnerType;\n    this.bgsType = this.validate('bgsType', this.bgsType, SPINNER, this.defaultConfig.bgsType) as SpinnerType;\n\n    this.fgDivs = Array(SPINNER_CONFIG[this.fgsType].divs).fill(1);\n    this.fgSpinnerClass = SPINNER_CONFIG[this.fgsType].class;\n    this.bgDivs = Array(SPINNER_CONFIG[this.bgsType].divs).fill(1);\n    this.bgSpinnerClass = SPINNER_CONFIG[this.bgsType].class;\n  }\n\n  /**\n   * Determine the positions of spinner, logo and text\n   */\n  private determinePositions(): void {\n    this.fgsPosition = this.validate('fgsPosition', this.fgsPosition, POSITION, this.defaultConfig.fgsPosition) as PositionType;\n    this.logoPosition = this.validate('logoPosition', this.logoPosition, POSITION, this.defaultConfig.logoPosition) as PositionType;\n    this.textPosition = this.validate('textPosition', this.textPosition, POSITION, this.defaultConfig.textPosition) as PositionType;\n    this.gap = coerceNumber(this.gap, this.defaultConfig.gap);\n\n    this.logoTop = 'initial';\n    this.spinnerTop = 'initial';\n    this.textTop = 'initial';\n    const textSize = 24;\n\n    if (this.logoPosition.startsWith('center')) {\n      this.logoTop = '50%';\n    } else if (this.logoPosition.startsWith('top')) {\n      this.logoTop = '30px';\n    }\n\n    if (this.fgsPosition.startsWith('center')) {\n      this.spinnerTop = '50%';\n    } else if (this.fgsPosition.startsWith('top')) {\n      this.spinnerTop = '30px';\n    }\n\n    if (this.textPosition.startsWith('center')) {\n      this.textTop = '50%';\n    } else if (this.textPosition.startsWith('top')) {\n      this.textTop = '30px';\n    }\n\n    if (this.fgsPosition === POSITION.centerCenter) {\n      if (this.logoUrl && this.logoPosition === POSITION.centerCenter) {\n        if (this.text && this.textPosition === POSITION.centerCenter) {\n          // logo, spinner and text\n          this.logoTop = this.domSanitizer.bypassSecurityTrustStyle(\n            `calc(50% - ${this.fgsSize / 2}px - ${textSize / 2}px - ${this.gap}px)`\n          );\n          this.spinnerTop = this.domSanitizer.bypassSecurityTrustStyle(`calc(50% + ${this.logoSize / 2}px - ${textSize / 2}px)`);\n          this.textTop = this.domSanitizer.bypassSecurityTrustStyle(\n            `calc(50% + ${this.logoSize / 2}px + ${this.gap}px + ${this.fgsSize / 2}px)`\n          );\n        } else {\n          // logo and spinner\n          this.logoTop = this.domSanitizer.bypassSecurityTrustStyle(`calc(50% - ${this.fgsSize / 2}px - ${this.gap / 2}px)`);\n          this.spinnerTop = this.domSanitizer.bypassSecurityTrustStyle(`calc(50% + ${this.logoSize / 2}px + ${this.gap / 2}px)`);\n        }\n      } else {\n        if (this.text && this.textPosition === POSITION.centerCenter) {\n          // spinner and text\n          this.spinnerTop = this.domSanitizer.bypassSecurityTrustStyle(`calc(50% - ${textSize / 2}px - ${this.gap / 2}px)`);\n          this.textTop = this.domSanitizer.bypassSecurityTrustStyle(`calc(50% + ${this.fgsSize / 2}px + ${this.gap / 2}px)`);\n        }\n      }\n    } else {\n      if (this.logoUrl && this.logoPosition === POSITION.centerCenter && this.text && this.textPosition === POSITION.centerCenter) {\n        // logo and text\n        this.logoTop = this.domSanitizer.bypassSecurityTrustStyle(`calc(50% - ${textSize / 2}px - ${this.gap / 2}px)`);\n        this.textTop = this.domSanitizer.bypassSecurityTrustStyle(`calc(50% + ${this.logoSize / 2}px + ${this.gap / 2}px)`);\n      }\n    }\n  }\n\n  private validate(inputName: string, value: string, validTypeObj: {}, fallbackValue: string): string {\n    if (\n      Object.keys(validTypeObj)\n        .map(k => validTypeObj[k])\n        .findIndex(v => v === value) === -1\n    ) {\n      console.error(`[ngx-ui-loader] - ${inputName} (\"${value}\") is invalid. ` + `Default value \"${fallbackValue}\" is used.`);\n      return fallbackValue;\n    }\n    return value;\n  }\n\n  /**\n   * On destroy event\n   */\n  ngOnDestroy() {\n    this.ngxService.destroyLoaderData(this.loaderId);\n    if (this.showForegroundWatcher) {\n      this.showForegroundWatcher.unsubscribe();\n    }\n    if (this.showBackgroundWatcher) {\n      this.showBackgroundWatcher.unsubscribe();\n    }\n    if (this.foregroundClosingWatcher) {\n      this.foregroundClosingWatcher.unsubscribe();\n    }\n    if (this.backgroundClosingWatcher) {\n      this.backgroundClosingWatcher.unsubscribe();\n    }\n  }\n}\n","import { Directive, ElementRef, Input, OnDestroy, Renderer2, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { NgxUiLoaderService } from './ngx-ui-loader.service';\nimport { coerceNumber } from '../utils/functions';\nimport { ShowEvent } from '../utils/interfaces';\nimport { FOREGROUND, WAITING_FOR_OVERLAY_DISAPPEAR } from '../utils/constants';\n\n@Directive({ selector: '[ngxUiLoaderBlurred]' })\nexport class NgxUiLoaderBlurredDirective implements OnInit, OnDestroy {\n  private blurNumber: number;\n\n  @Input()\n  get blur(): number {\n    return this.blurNumber;\n  }\n\n  set blur(value: number) {\n    this.blurNumber = coerceNumber(value, this.loader.getDefaultConfig().blur);\n  }\n\n  @Input() loaderId: string;\n\n  showForegroundWatcher: Subscription;\n\n  constructor(private elementRef: ElementRef, private renderer: Renderer2, private loader: NgxUiLoaderService) {\n    this.blurNumber = this.loader.getDefaultConfig().blur;\n    this.loaderId = this.loader.getDefaultConfig().masterLoaderId;\n  }\n\n  /**\n   * On Init event\n   */\n  ngOnInit() {\n    this.showForegroundWatcher = this.loader.showForeground$\n      .pipe(filter((showEvent: ShowEvent) => this.loaderId === showEvent.loaderId))\n      .subscribe(data => {\n        if (data.isShow) {\n          const filterValue = `blur(${this.blurNumber}px)`;\n          this.renderer.setStyle(this.elementRef.nativeElement, '-webkit-filter', filterValue);\n          this.renderer.setStyle(this.elementRef.nativeElement, 'filter', filterValue);\n        } else {\n          setTimeout(() => {\n            if (!this.loader.hasRunningTask(FOREGROUND, data.loaderId)) {\n              this.renderer.setStyle(this.elementRef.nativeElement, '-webkit-filter', 'none');\n              this.renderer.setStyle(this.elementRef.nativeElement, 'filter', 'none');\n            }\n          }, WAITING_FOR_OVERLAY_DISAPPEAR);\n        }\n      });\n  }\n\n  /**\n   * On destroy event\n   */\n  ngOnDestroy() {\n    if (this.showForegroundWatcher) {\n      this.showForegroundWatcher.unsubscribe();\n    }\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NgxUiLoaderComponent } from './ngx-ui-loader.component';\nimport { NgxUiLoaderBlurredDirective } from './ngx-ui-loader-blurred.directive';\nimport { NGX_UI_LOADER_CONFIG_TOKEN } from './ngx-ui-loader-config.token';\nimport { NgxUiLoaderConfig } from '../utils/interfaces';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [NgxUiLoaderComponent, NgxUiLoaderBlurredDirective],\n  exports: [NgxUiLoaderComponent, NgxUiLoaderBlurredDirective]\n})\nexport class NgxUiLoaderModule {\n  /**\n   * forRoot\n   * @returns A module with its provider dependencies\n   */\n  static forRoot(ngxUiLoaderConfig: NgxUiLoaderConfig): ModuleWithProviders {\n    return {\n      ngModule: NgxUiLoaderModule,\n      providers: [\n        {\n          provide: NGX_UI_LOADER_CONFIG_TOKEN,\n          useValue: ngxUiLoaderConfig\n        }\n      ]\n    };\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { NgxUiLoaderRouterConfig } from '../utils/interfaces';\n\n/**\n * Injection token for ngx-ui-loader-router configuration\n */\nexport const NGX_UI_LOADER_ROUTER_CONFIG_TOKEN = new InjectionToken<NgxUiLoaderRouterConfig>('ngxUiLoaderRouterCustom.config');\n","import { NgModule, ModuleWithProviders, Inject, Optional, SkipSelf } from '@angular/core';\nimport { NavigationCancel, NavigationEnd, NavigationError, NavigationStart, Router, RouterEvent } from '@angular/router';\n\nimport { NgxUiLoaderService } from '../core/ngx-ui-loader.service';\nimport { NgxUiLoaderRouterConfig } from '../utils/interfaces';\nimport { NGX_UI_LOADER_ROUTER_CONFIG_TOKEN } from './ngx-ui-loader-router-config.token';\nimport { ROUTER_LOADER_TASK_ID } from '../utils/constants';\nimport { getExcludeObj, isIgnored } from '../utils/functions';\nimport { Exclude } from '../utils/interfaces';\n\n@NgModule({})\nexport class NgxUiLoaderRouterModule {\n  private exclude: Exclude;\n\n  /**\n   * forRoot\n   * @returns A module with its provider dependencies\n   */\n  static forRoot(routerConfig: NgxUiLoaderRouterConfig): ModuleWithProviders {\n    return {\n      ngModule: NgxUiLoaderRouterModule,\n      providers: [\n        {\n          provide: NGX_UI_LOADER_ROUTER_CONFIG_TOKEN,\n          useValue: routerConfig\n        }\n      ]\n    };\n  }\n\n  /**\n   * Constructor\n   */\n  constructor(\n    @Optional() @SkipSelf() parentModule: NgxUiLoaderRouterModule,\n    @Optional() @Inject(NGX_UI_LOADER_ROUTER_CONFIG_TOKEN) customConfig: NgxUiLoaderRouterConfig,\n    router: Router,\n    loader: NgxUiLoaderService\n  ) {\n    if (parentModule) {\n      throw new Error('[ngx-ui-loader] - NgxUiLoaderRouterModule is already loaded. It should be imported in the root `AppModule` only!');\n    }\n\n    let config: NgxUiLoaderRouterConfig = {\n      loaderId: loader.getDefaultConfig().masterLoaderId,\n      showForeground: true\n    };\n\n    this.exclude = getExcludeObj(customConfig);\n\n    if (customConfig) {\n      config = { ...config, ...customConfig };\n    }\n\n    router.events.subscribe((event: RouterEvent) => {\n      if (event instanceof NavigationStart) {\n        if (!isIgnored(event.url, this.exclude.strs, this.exclude.regExps)) {\n          if (config.showForeground) {\n            loader.startLoader(config.loaderId, ROUTER_LOADER_TASK_ID);\n          } else {\n            loader.startBackgroundLoader(config.loaderId, ROUTER_LOADER_TASK_ID);\n          }\n        }\n      }\n\n      if (event instanceof NavigationEnd || event instanceof NavigationCancel || event instanceof NavigationError) {\n        if (!isIgnored(event.url, this.exclude.strs, this.exclude.regExps)) {\n          if (config.showForeground) {\n            loader.stopLoader(config.loaderId, ROUTER_LOADER_TASK_ID);\n          } else {\n            loader.stopBackgroundLoader(config.loaderId, ROUTER_LOADER_TASK_ID);\n          }\n        }\n      }\n    });\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { NgxUiLoaderHttpConfig } from '../utils/interfaces';\n\n/**\n * Injection token for ngx-ui-loader-http configuration\n */\nexport const NGX_UI_LOADER_HTTP_CONFIG_TOKEN = new InjectionToken<NgxUiLoaderHttpConfig>('ngxUiLoaderHttpCustom.config');\n","import { Injectable, Inject, Optional } from '@angular/core';\nimport { HttpInterceptor, HttpEvent, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\n\nimport { NgxUiLoaderService } from '../core/ngx-ui-loader.service';\nimport { NGX_UI_LOADER_HTTP_CONFIG_TOKEN } from './ngx-ui-loader-http-config.token';\nimport { NgxUiLoaderHttpConfig } from '../utils/interfaces';\nimport { HTTP_LOADER_TASK_ID } from '../utils/constants';\nimport { getExcludeObj, isIgnored } from '../utils/functions';\nimport { Exclude } from '../utils/interfaces';\n\n@Injectable()\nexport class NgxUiLoaderHttpInterceptor implements HttpInterceptor {\n  private count: number;\n  private config: NgxUiLoaderHttpConfig;\n  private exclude: Exclude;\n\n  /**\n   * Constructor\n   */\n  constructor(\n    @Optional() @Inject(NGX_UI_LOADER_HTTP_CONFIG_TOKEN) customConfig: NgxUiLoaderHttpConfig,\n    private loader: NgxUiLoaderService\n  ) {\n    this.count = 0;\n    this.config = {\n      loaderId: this.loader.getDefaultConfig().masterLoaderId,\n      showForeground: false\n    };\n\n    this.exclude = getExcludeObj(customConfig);\n\n    if (customConfig) {\n      this.config = { ...this.config, ...customConfig };\n    }\n  }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    if (isIgnored(req.url, this.exclude.strs, this.exclude.regExps)) {\n      return next.handle(req);\n    }\n\n    this.count++;\n    if (this.config.showForeground) {\n      this.loader.startLoader(this.config.loaderId, HTTP_LOADER_TASK_ID, this.config);\n    } else {\n      this.loader.startBackgroundLoader(this.config.loaderId, HTTP_LOADER_TASK_ID, this.config);\n    }\n\n    return next.handle(req).pipe(\n      finalize(() => {\n        this.count--;\n        if (this.count === 0) {\n          if (this.config.showForeground) {\n            this.loader.stopLoader(this.config.loaderId, HTTP_LOADER_TASK_ID);\n          } else {\n            this.loader.stopBackgroundLoader(this.config.loaderId, HTTP_LOADER_TASK_ID);\n          }\n        }\n      })\n    );\n  }\n}\n","import { NgModule, ModuleWithProviders, Optional, SkipSelf } from '@angular/core';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { NgxUiLoaderHttpInterceptor } from './ngx-ui-loader-http.interceptor';\nimport { NgxUiLoaderHttpConfig } from '../utils/interfaces';\nimport { NGX_UI_LOADER_HTTP_CONFIG_TOKEN } from './ngx-ui-loader-http-config.token';\n\n@NgModule({\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: NgxUiLoaderHttpInterceptor,\n      multi: true\n    }\n  ]\n})\nexport class NgxUiLoaderHttpModule {\n  /**\n   * Constructor\n   */\n  constructor(@Optional() @SkipSelf() parentModule: NgxUiLoaderHttpModule) {\n    if (parentModule) {\n      throw new Error('[ngx-ui-loader] - NgxUiLoaderHttpModule is already loaded. It should be imported in the root `AppModule` only!');\n    }\n  }\n\n  /**\n   * forRoot\n   * @returns A module with its provider dependencies\n   */\n  static forRoot(httpConfig: NgxUiLoaderHttpConfig): ModuleWithProviders {\n    return {\n      ngModule: NgxUiLoaderHttpModule,\n      providers: [\n        {\n          provide: NGX_UI_LOADER_HTTP_CONFIG_TOKEN,\n          useValue: httpConfig\n        }\n      ]\n    };\n  }\n}\n"]}